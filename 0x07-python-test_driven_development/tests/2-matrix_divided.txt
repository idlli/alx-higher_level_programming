>>> div_matrix = __import__('2-matrix_divided').matrix_divided
>>> div = 3
>>> m = [[1, 2, 3], [4, 5, "6"]]
>>> div_matrix(m, div)
Traceback (most recent call last):
  File "<stdin>", line 3, in <module>
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> m = [[1, 2, 3], (4, 5, 6)]
>>> div_matrix(m, div)
Traceback (most recent call last):
  File "<stdin>", line 5, in <module>
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> m = ([1, 2, 3], [4, 5, 6])
>>> div_matrix(m, div)
Traceback (most recent call last):
  File "<stdin>", line 7, in <module>
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> m = [[1, 2, 3], [4, 5]]
>>> div_matrix(m, div)
Traceback (most recent call last):
  File "<stdin>", line 9, in <module>
TypeError: Each row of the matrix must have the same size

>>> m = [[1, 2, 3], [4, 5, 6]]
>>> div = "3"
>>> div_matrix(m, div)
Traceback (most recent call last):
  File "<stdin>", line 12, in <module>
TypeError: div must be a number

>>> m = [[1, 2, 3], [4, 5, 6]]
>>> div = 0
>>> div_matrix(m, div)
Traceback (most recent call last):
  File "<stdin>", line 15, in <module>
ZeroDivisionError: division by zero

>>> m = [[1, 2, 3], [4, 5, 6]]
>>> div = 3
>>> div_matrix(m, div)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> m = [[]]
>>> div = 3
>>> div_matrix(m, div)
[[]]
